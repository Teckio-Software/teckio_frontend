name: Development

on:
  push:
    branches: [develop]
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}

      - name: Definir IMAGE (owner en minÃºsculas)
        run: |
          OWNER_LC=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          echo "IMAGE=ghcr.io/${OWNER_LC}/teckio_frontend" >> $GITHUB_ENV
          echo "Usando imagen: $IMAGE"

      - name: Login a GHCR (con GITHUB_TOKEN)
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" \
            | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      - name: Escribir llave SSH
        run: |
          printf "%s" "${{ secrets.SSH_PRIVATE_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Build & Push
        env:
          TAG_DEV: dev
          TAG_SHA: sha-${{ github.sha }}
        run: |
          docker build -f Dockerfile -t "$IMAGE:$TAG_DEV" -t "$IMAGE:$TAG_SHA" .
          docker push "$IMAGE:$TAG_DEV"
          docker push "$IMAGE:$TAG_SHA"

      - name: Deploy al droplet por SSH
        env:
          SSH_USER: ${{ secrets.DROPLET_USER }}
          SSH_HOST: ${{ secrets.DROPLET_HOST }}
        run: |
          ssh -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -i key.pem "$SSH_USER@$SSH_HOST" \
            'export GHCR_USER="${{ secrets.GHCR_USER }}"; \
             export GHCR_TOKEN="${{ secrets.GHCR_TOKEN }}"; \
             bash /srv/teckio/deploy-dev.sh'
