name: CI/CD Frontend
on:
  push:
    branches: [develop]
  workflow_dispatch:

jobs:
  build_push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/Teckio-Software/teckio_frontend
          tags: |
            type=raw,value=dev
            type=sha
      - uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: build_push
    steps:
      - name: SSH deploy
        if: ${{ vars.DEPLOY_MODE == 'service' }}
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          key: ${{ secrets.DO_SSH_KEY }}
          envs: GHCR_USER,GHCR_TOKEN
          script: |
            export GHCR_USER='${{ secrets.GHCR_USER }}'
            export GHCR_TOKEN='${{ secrets.GHCR_TOKEN }}'
            echo "$GHCR_TOKEN" | docker login ghcr.io -u "$GHCR_USER" --password-stdin
            cd /srv/teckio/compose
            docker compose -f docker-compose.dev.yml pull frontend
            docker compose -f docker-compose.dev.yml up -d frontend
            docker image prune -f || true
